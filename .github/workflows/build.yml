name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    # Update weekly
    - cron: '0 0 * * 0'
  push:
    branches: [ main ]
    # Publish semver tags as releases
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Download docker-slim
        run: |
          curl -L -o ds.tar.gz https://downloads.dockerslim.com/releases/1.37.0/dist_linux.tar.gz
          tar -xvf ds.tar.gz
          mv dist_linux/docker-slim /usr/local/bin/
          mv dist_linux/docker-slim-sensor /usr/local/bin/

      - name: Build Docker image
        run: |
          docker-slim --in-container build . \
            --dockerfile Dockerfile \
            --tag wahlfeld:ci-runner \
            --http-probe-off \
            --exec 'sh test.sh' \
            --include-path '/usr/lib/python3.9/site-packages/certifi/cacert.pem' \
            --include-path '/usr/lib/python3.9/site-packages/pip/_vendor/certifi/cacert.pem'

      # Push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
